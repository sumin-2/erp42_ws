<?xml version="1.0"?>
<robot name="erp42" xmlns:xacro="http://ros.org/wiki/xacro">

  <xacro:arg name="pkg_share"        default=""/>
  <xacro:arg name="controllers_file" default=""/>

  <xacro:include filename="$(arg pkg_share)/urdf/macros_erp42.xacro"/>
  <!--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-OK-XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX -->
  <link name="structure">
    
    <visual name="visual">
      <origin xyz="0 0 -0.03" rpy="0 0 3.14" />
      <geometry>
        <mesh filename="$(arg pkg_share)/meshes/erp42_structure.dae" scale="1 1 1"/>
      </geometry>
    </visual>

    <collision>
      <geometry>
      <!--<box size=" 1.0 1.0 0.2"/>-->
      <mesh filename="$(arg pkg_share)/meshes/erp42_structure.dae" scale="1 1 1"/>
      </geometry>
         <origin xyz="0 0 -0.03" rpy=" 0 0 3.14" />
    </collision>
    
    <inertial>
      <mass value="160"/>
      <origin xyz="0 0 0" />
      <inertia ixx="20.43" ixy="0.584" ixz="-0.191" iyy="54.197" iyz="-0.2449" izz="72.2588"/>
    </inertial>
  </link>

<!--XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX -->

<!-- XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXxXXXXXX  LINK  XXXXXXXXXxXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-->
  <xacro:wheel prefix="right" suffix="front" x="0" y="0" z="0" pitch="0" yaw="1.5707"/> 
  <xacro:wheel prefix="right" suffix="back" x="0" y="0" z="0" pitch="0" yaw="1.5707"/>
  <xacro:wheel prefix="left" suffix="front" x="0" y="0" z="0" pitch="3.1414" yaw="1.5707"/>
  <xacro:wheel prefix="left" suffix="back" x="0" y="0" z="0" pitch="3.1414" yaw="1.5707"/>
  <!-- XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  DISK LINK  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-->
  <xacro:disk_wheel prefix="right" suffix="front" roll="0" pitch="0" yaw="1.5707"/>  <!--yall value is only for visual -->
  <xacro:disk_wheel prefix="left" suffix="front" roll="0" pitch="0" yaw="-1.5707"/>  <!--yall value is only for visual -->

  <xacro:disk_wheel prefix="right" suffix="back" roll="0" pitch="0" yaw="1.5707"/>  <!--yall value is only for visual -->
  <xacro:disk_wheel prefix="left" suffix="back" roll="0" pitch="0" yaw="-1.5707" with_gazebo="true"/>  <!--yall value is only for visual -->

  <!-- XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  actuator  1  2   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-->
  <xacro:wheel_joint prefix="right" suffix="front" x="0" y="0.08" z="0" /> <!--rotation in y axes, wheel connect with the front disk-->
  <xacro:wheel_joint prefix="left" suffix="front" x="0" y="-0.08" z="0"/>  <!--rotation in y axes, wheel connect with the front disk-->
  <!-- XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  actuator  3  4   XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-->
  <xacro:wheel_joint prefix="right" suffix="back" x="0" y="0.08" z="0" />   <!--rotation in y axes wheel connect with the back disk-->
  <xacro:wheel_joint prefix="left" suffix="back" x="0" y="-0.08" z="0" />   <!--rotation in y axes wheel connect with the back disk-->
  <!-- XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  actuator 5 6  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-->
  <xacro:front_disk_wheel_joint prefix="right" suffix="front" x="0.53" y="0.51" z="0"/>  <!--disk rotation in z axes, disk connect with structure-->
  <xacro:front_disk_wheel_joint prefix="left"  suffix="front" x="0.53" y="-0.51" z="0"/> <!--disk rotation in z axes, disk connect with structure-->
  <!-- XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX  fixed  XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX-->
  <xacro:back_disk_wheel_joint prefix="right" suffix="back" x="-0.49" y="0.51" z="0"/>  <!--disk rotation in z axes, disk connect with structure-->
  <xacro:back_disk_wheel_joint prefix="left" suffix="back" x="-0.49" y="-0.51" z="0"/> <!--disk rotation in z axes, disk connect with structure-->

  <xacro:my_camera prefix="middle" /> <!-- camera link we cant use the name camera due to create a confuse with gazebo and presente the problem with 
	invalided parameter name--> 
  <xacro:my_camera prefix="right" /> <!-- camera link we cant use the name camera due to create a confuse with gazebo and presente the problem with 
	invalided parameter name--> 
  <xacro:my_camera prefix="left" /> <!-- camera link we cant use the name camera due to create a confuse with gazebo and presente the problem with 
	invalided parameter name--> 
  <xacro:my_camera prefix="back" /> <!-- camera link we cant use the name camera due to create a confuse with gazebo and presente the problem with 
	invalided parameter name--> 
  <xacro:camera_joint prefix="middle" x="1.0" y="0" z="0.3" roll="0" pitch="0" yaw="0"/> <!--camera joint-->
  <xacro:camera_joint prefix="left" x="0.05" y="0.10" z="0.3" roll="0" pitch="0" yaw="0.785"/> <!--camera joint-->
  <xacro:camera_joint prefix="right" x="0.05" y="-0.10" z="0.3" roll="0" pitch="0" yaw="-0.785"/> <!--camera joint-->
  <xacro:camera_joint prefix="back" x="-0.05" y="0" z="0.4" roll="0" pitch="0" yaw="3.1414"/> <!--camera joint-->

  <gazebo>
    <plugin name="skid_steer_drive_controller" filename="libgazebo_ros_diff_drive.so">
      <ros>
        <namespace>/</namespace>
        <argument>/cmd_vel:=cmd_vel</argument>
        <argument>/odom:=odom</argument>
      </ros>

      <update_rate>100.0</update_rate>
      <num_wheel_pairs>2</num_wheel_pairs>
      <odometry_frame>odom</odometry_frame>

      <left_joint>left_front_wheel_joint</left_joint>
      <left_joint>left_back_wheel_joint</left_joint>
      <right_joint>right_front_wheel_joint</right_joint>
      <right_joint>right_back_wheel_joint</right_joint>

      <wheel_separation>1.02</wheel_separation>
      <wheel_diameter>0.56</wheel_diameter>
      <robot_base_frame>structure</robot_base_frame>

      <max_wheel_torque>15</max_wheel_torque>

      <publish_odom>true</publish_odom>
      <publish_odom_tf>true</publish_odom_tf>
      <publish_wheel_tf>false</publish_wheel_tf>
    </plugin>
  </gazebo>

<!-- left_camera -->
  <gazebo reference="left_camera">
    <sensor type="camera" name="left_camera1">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
          <noise>
            <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>/erp42/left_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>left_camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

<!-- right_camera -->
  <gazebo reference="right_camera">
    <sensor type="camera" name="right_camera2">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
          <noise>
            <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>/erp42/right_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>right_camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

<!-- middle_camera -->
  <gazebo reference="middle_camera">
    <sensor type="camera" name="middle_camera3">
      <pose>0 0 0 0 0 0</pose> 
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
          <noise>
            <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>          
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>/erp42/middle_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>middle_camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>


<!-- back_camera -->
  <gazebo reference="back_camera">
    <sensor type="camera" name="back_camera4">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>/erp42/back_camera</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>back_camera</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>

  <link name="imu_link">
    <inertial>
      <mass value="0.001"/>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <inertia ixx="0.00001" ixy="0.0" ixz="0.0"
              iyy="0.00001" iyz="0.0"
              izz="0.00001"/>
    </inertial>
    <visual>
      <geometry><sphere radius="0.02"/></geometry>
    </visual>
    <collision>
      <geometry><sphere radius="0.02"/></geometry>
    </collision>
  </link>
  <joint name="imu_joint" type="fixed">
    <parent link="structure"/>
    <child link="imu_link"/>
    <origin xyz="0 0 0.1" rpy="0 0 0"/>
  </joint>
  <gazebo reference="imu_link">
    <sensor name="imu_sensor" type="imu">
      <always_on>true</always_on>
      <update_rate>20.0</update_rate>
      <imu>
        <topic>imu</topic>
        <gaussian_noise>0.0</gaussian_noise>
      </imu>
      <plugin name="imu_plugin" filename="libgazebo_ros_imu_sensor.so"/>
    </sensor>
  </gazebo>
</robot>
   